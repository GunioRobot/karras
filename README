# karras

"Mongo like candy!", Blazing Saddles

## Usage

(use 'karras)
(use 'karras.sugar)

(def my-collection (collection (connect) :my-database :my-collection))

(def doc1 {:name "doc11" :author "author1" :counter 0 :size 10})
(def doc2 {:name "doc12" :author "author1" :counter 0 :size 20})
(def doc3 {:name "doc21" :author "author2" :counter 0 :size 30})
(def doc1 {:name "doc22" :author "author2" :counter 0 :size 40})
(def doc2 {:name "doc31" :author "author3" :counter 0 :size 50})
(def doc3 {:name "doc31" :author "author3" :counter 0 :size 60})

(insert my-collection doc1 doc2 doc3)

(ensure-index my-collection (asc :size))
(ensure-index my-collection (compound-index (asc :name) (desc :author))

(def all-ordered-by-author-then-title
     (fetch my-collection
            :order-by [(asc :author) (asc :title)]))

(def all-with-size-more-than-20
     (fetch my-collection (query (gte :size 20))))

(def increment-all-counters
     (update-all my-collection (modify (incr :counter))))

(def tag-big-if-size-gte-30
     (update-all my-collection (query (gte :size 30))
                 (modify (push :tags "big"))))

(def count-all-documents (count-docs my-collection))

(defn count-for-author [author]
  (count-docs (query (eq :author author))))

(def sum-of-counters
     (group my-collection
            []
            nil
            {:csum 0}
            "function(doc,result) { result.csum += doc.counter; }"))

(defn sum-of-counters-tagged-docs-group-by-author [author]
     (group my-collection
            [:author]
            (query (exist? :tags))
            {:csum 0}
            "function(doc,result) { result.csum += doc.counter; }"))